.popup {
	height: 100vh;
	width: 100%; //width should always be in percentage for consistent fluid flow.
	position: fixed;
	top: 0;
	left: 0;
	background-color: rgba($color-black, .8); //nice colorblack over here haha
	z-index: 9999;

	opacity: 0;
	visibility: hidden;
	transition: all .3s;



	&__content {
		@include absCenter; //this where the real centering is defined

		width: 75%; 
		height:50rem;
		background-color: $color-white;
		box-shadow: 0 2rem 4rem rgba($color-black, .2);
		display: table; //this defines/initiates the defined table-cells below. ITS A MUST for functionality
		overflow: hidden;

		//the initial state of the content before targeted
		opacity: 0;
		transform: translate(-50%,-50%) scale(.25); //translate is defined here to activate it again since it was overridden from the absCenter. TWO ATRASITIONS CAN NEVER WORK TOGETHER
		transition: all .5s .2s; //activates the animation

	}


	&__left {
		width: 33.33333%;
		display: table-cell;
	}


	&__right {
		width: 66.66666%;
		display: table-cell;
		vertical-align: middle;
		padding: 3rem 5rem;
	}


	&__img {
		display: block;
		width: 100%; 
		height: auto;
	}


	&__text {
		font-size: 1.4rem;
		margin-bottom: 4rem;

		column-count: 2;
		column-gap: 4em; //1em is always the current font-size of the element 1em here is 14px
		column-rule: 1px solid $color-grey-light-2; 

		-moz-hyphens: auto;
		-ms-hyphens: auto;
		-webkit-hyphens: auto;
		hyphens: auto; // this defines hyphens in the unfinished words in the columns
	}


	//the target pseudo class is used to directly target the element when an action or event is trigerred
	//THESE ARE WHEN IN OPEN STATES
	&:target {
		opacity: 1;
		visibility: visible;
	}

	&:target &__content {
		opacity: 1;
		visibility: visible;
	}

	&__close {
		&:link,
		&:visited {
			color: $color-grey-dark;
			position: absolute;
			top: 2.5rem;
			right: 2.5rem;
			font-size: 3rem;
			text-decoration: none;
			display: inline-block;

			transition: all .2s;
			line-height: 1;
		}

		&:hover {
			color: $color-primary;
		}
	}
}